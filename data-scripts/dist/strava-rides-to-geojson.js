"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const assert = require("assert");
const util_1 = require("util");
const minimist = require("minimist");
const args = minimist(process.argv.slice(2));
const { _: [inFile, outFile], boundary: boundingString } = args;
const boundary = [];
if (boundingString) {
    try {
        const parsed = JSON.parse(boundingString);
        boundary.push(...parsed);
    }
    catch (e) { }
    assert.equal(boundary.length, 2, "Invalid bounding argument");
}
assert.ok(inFile, "Missing input file argument");
assert.ok(outFile, "Missing output file argument");
const asyncReadFile = util_1.promisify(fs.readFile);
const asyncWriteFile = util_1.promisify(fs.writeFile);
const main = async () => {
    const inJSON = await asyncReadFile(inFile, "utf8");
    const rides = JSON.parse(inJSON);
    const feature = {
        type: "Feature",
        properties: {
            type: "cycle"
        },
        geometry: {
            type: "MultiLineString",
            coordinates: rides
                .filter(ride => ride.points)
                .filter(ride => (!boundary.length ||
                ride.points.every(tuple => tuple.every((a, i) => (a > boundary[0][i] &&
                    a < boundary[1][i])))))
                .map(ride => ride.points)
        }
    };
    const geojson = {
        "type": "FeatureCollection",
        features: [feature]
    };
    const outJSON = JSON.stringify(geojson, null, "\t");
    await asyncWriteFile(outFile, outJSON);
};
main();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyYXZhLXJpZGVzLXRvLWdlb2pzb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvc3RyYXZhLXJpZGVzLXRvLWdlb2pzb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5QkFBeUI7QUFFekIsaUNBQWlDO0FBQ2pDLCtCQUErQjtBQUUvQixxQ0FBcUM7QUFJckMsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0MsTUFBTSxFQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFDLEdBQUcsSUFBSSxDQUFDO0FBQzlELE1BQU0sUUFBUSxHQUFlLEVBQUUsQ0FBQztBQUVoQyxFQUFFLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO0lBQ3BCLElBQUksQ0FBQztRQUNKLE1BQU0sTUFBTSxHQUF5QixJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRWhFLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUM7SUFFZCxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLDJCQUEyQixDQUFDLENBQUM7QUFDL0QsQ0FBQztBQUVELE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLDZCQUE2QixDQUFDLENBQUM7QUFDakQsTUFBTSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsOEJBQThCLENBQUMsQ0FBQztBQUVuRCxNQUFNLGFBQWEsR0FBRyxnQkFBUyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM3QyxNQUFNLGNBQWMsR0FBRyxnQkFBUyxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQU8vQyxNQUFNLElBQUksR0FBRyxLQUFLLElBQUksRUFBRTtJQUN2QixNQUFNLE1BQU0sR0FBRyxNQUFNLGFBQWEsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFFbkQsTUFBTSxLQUFLLEdBQXVDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFckUsTUFBTSxPQUFPLEdBQUc7UUFDZixJQUFJLEVBQUUsU0FBUztRQUNmLFVBQVUsRUFBRTtZQUNYLElBQUksRUFBRSxPQUFPO1NBQ2I7UUFDRCxRQUFRLEVBQUU7WUFDVCxJQUFJLEVBQUUsaUJBQWlCO1lBQ3ZCLFdBQVcsRUFBb0IsS0FBSztpQkFDbkMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztpQkFDM0IsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FDZixDQUFDLFFBQVEsQ0FBQyxNQUFNO2dCQUNoQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUNoRCxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDbEIsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDbEIsQ0FBQyxDQUFDLENBQ0gsQ0FBQztpQkFDRCxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1NBQ3pCO0tBQ0QsQ0FBQztJQUVGLE1BQU0sT0FBTyxHQUFZO1FBQ3hCLE1BQU0sRUFBRSxtQkFBbUI7UUFDM0IsUUFBUSxFQUFFLENBQUMsT0FBTyxDQUFDO0tBQ25CLENBQUM7SUFFRixNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFFcEQsTUFBTSxjQUFjLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3hDLENBQUMsQ0FBQztBQUVGLElBQUksRUFBRSxDQUFDIn0=