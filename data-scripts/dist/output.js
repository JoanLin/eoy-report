"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const child_process_1 = require("child_process");
const util_1 = require("util");
const path = require("path");
const asyncExecFile = util_1.promisify(child_process_1.execFile);
const DATA_SRC_DIR = path.resolve(__dirname, "../../data");
const DATA_DEST_DIR = path.resolve(__dirname, "../../client/public/data");
const SCRIPTS_DIR = __dirname;
const DEDUPED_SIMPLIFIED_RIDES = path.join(DATA_SRC_DIR, "2017_rides_deduped_simplified.json");
const DEDUPED_SIMPLIFIED_WALKS = path.join(DATA_SRC_DIR, "2017_walks_deduped_simplified.json");
const FOURSQUARE_CHECKINS = path.join(DATA_SRC_DIR, "2017_foursquare_checkins.json");
const areas = [
    {
        name: "toronto",
        boundary: [
            [-81.0041, 42.6532],
            [-77.6944, 44.5221]
        ]
    },
    {
        name: "montreal",
        boundary: [[-73.836769, 45.392057], [-73.454459, 45.671406]]
    },
    {
        name: "sydney",
        boundary: [[151.12094, -34.000247], [151.302217, -33.81795]]
    },
    {
        name: "melbourne",
        boundary: [[144.783294, -37.888128], [145.048776, -37.629314]]
    },
    {
        name: "auckland",
        boundary: [[174.5235, -37.3416], [175.2706, -36.5911]]
    },
    {
        name: "vancouver",
        boundary: [[-123.2876, 48.9936], [-122.7303, 49.3341]]
    }
];
const main = async () => {
    /*await asyncExecFile(`node`, [
        path.join(SCRIPTS_DIR, "get-foursquare-checkins.js"),
        FOURSQUARE_CHECKINS,
        "-c",
        path.join(DATA_SRC_DIR, "foursquare_config.json"),
        "--year=2017"
    ]);*/
    for (const area of areas) {
        await asyncExecFile(`node`, [
            path.join(SCRIPTS_DIR, "checkins-to-geojson.js"),
            FOURSQUARE_CHECKINS,
            path.join(DATA_DEST_DIR, `2017_checkins_${area.name}.geojson`),
            `--boundary=${JSON.stringify(area.boundary)}`
        ]);
    }
    /*
    //get strava ride ids
    await asyncExecFile(`node`, [
        path.join(SCRIPTS_DIR, "get-strava-ride-ids.js"),
        path.join(DATA_SRC_DIR, "2017_ride_ids.json"),
        "--year=2017"
    ]);

    //get strava rides from ids
    await asyncExecFile(`node`, [
        path.join(SCRIPTS_DIR, "get-strava-rides-from-ids.js"),
        path.join(DATA_SRC_DIR, "2017_ride_ids.json"),
        path.join(DATA_SRC_DIR, "2017_rides.json")
    ]);
    */
    await asyncExecFile(`node`, [
        path.join(SCRIPTS_DIR, "rides.js"),
        path.join(DATA_SRC_DIR, "2017_rides.json"),
        DEDUPED_SIMPLIFIED_RIDES
    ]);
    for (const area of areas) {
        await asyncExecFile(`node`, [
            path.join(SCRIPTS_DIR, "strava-rides-to-geojson.js"),
            DEDUPED_SIMPLIFIED_RIDES,
            path.join(DATA_DEST_DIR, `2017_rides_${area.name}.geojson`),
            `--boundary=${JSON.stringify(area.boundary)}`
        ]);
    }
    await asyncExecFile(`node`, [
        path.join(SCRIPTS_DIR, "walks.js"),
        path.join(DATA_SRC_DIR, "2017_walks.json"),
        DEDUPED_SIMPLIFIED_WALKS
    ]);
    for (const area of areas) {
        await asyncExecFile(`node`, [
            path.join(SCRIPTS_DIR, "walks-to-geojson.js"),
            DEDUPED_SIMPLIFIED_WALKS,
            path.join(DATA_DEST_DIR, `2017_walks_${area.name}.geojson`),
            `--boundary=${JSON.stringify(area.boundary)}`
        ]);
    }
};
main();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0cHV0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL291dHB1dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUF5QztBQUN6QywrQkFBaUM7QUFDakMsNkJBQTZCO0FBRTdCLE1BQU0sYUFBYSxHQUFHLGdCQUFTLENBQUMsd0JBQVEsQ0FBQyxDQUFDO0FBRTFDLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQyxDQUFDO0FBQzNELE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLDBCQUEwQixDQUFDLENBQUE7QUFDekUsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFDO0FBRTlCLE1BQU0sd0JBQXdCLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsb0NBQW9DLENBQUMsQ0FBQztBQUMvRixNQUFNLHdCQUF3QixHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLG9DQUFvQyxDQUFDLENBQUM7QUFDL0YsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSwrQkFBK0IsQ0FBQyxDQUFDO0FBT3JGLE1BQU0sS0FBSyxHQUFXO0lBQ3JCO1FBQ0MsSUFBSSxFQUFFLFNBQVM7UUFDZixRQUFRLEVBQUU7WUFDVCxDQUFDLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQztZQUNuQixDQUFDLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQztTQUNuQjtLQUNEO0lBQ0Q7UUFDQyxJQUFJLEVBQUUsVUFBVTtRQUNoQixRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7S0FDNUQ7SUFDRDtRQUNDLElBQUksRUFBRSxRQUFRO1FBQ2QsUUFBUSxFQUFFLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxTQUFT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